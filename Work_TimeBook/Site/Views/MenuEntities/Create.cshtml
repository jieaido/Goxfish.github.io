@model Entity.Model.MenuEntity

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>MenuEntity</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group" id="Parentid">
            @Html.LabelFor(model => model.ParentMenuId, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ParentMenuId, ViewBag.parentid as IEnumerable<SelectListItem>, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.ParentMenuId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MenuName, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.MenuName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.MenuName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MenuDisplayName, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.MenuDisplayName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.MenuDisplayName, "", new {@class = "text-danger"})
            </div>
        </div>
        <div  id="controllername"  style="display: none">
            <div class="form-group">
                @Html.LabelFor(model => model.ControllerName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ControllerName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ControllerName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ActionName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ActionName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ActionName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        

        <div class="form-group">
            @Html.LabelFor(model => model.SortId, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.SortId, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.SortId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section scripts
{

    <script type="text/javascript">
        $(function() {


            //var checkSelect= function() {
            //    if ($("#Parentid select").val() === "-1") {

            //        $("#controllername").hide();

            //    }
            // }
            //checkSelect();

            $("#Parentid").change(function () {

                if ($("#Parentid select").val() === "-1") {

                    $("#controllername").hide();

                } else {
                    $("#controllername").show();
                }
            });
        })
    </script>
}